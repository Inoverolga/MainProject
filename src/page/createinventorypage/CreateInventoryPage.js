import { useForm } from "react-hook-form";
import useSWRMutation from "swr/mutation";
import useSWR from "swr";
import { toast } from "react-toastify";
import { useNavigate } from "react-router-dom";
import { fetchCreateInventories, fetchTags } from "../../service/api";
import { useState } from "react";
import CreatableSelect from "react-select/creatable";

const CreateInventoryPage = () => {
  const navigate = useNavigate();
  const [selectedTags, setSelectedTags] = useState([]);
  const [tagSearchInput, setTagSearchInput] = useState("");

  const {
    register,
    handleSubmit,
    formState: { errors, isValid },
    watch,
    reset: resetForm,
  } = useForm({ mode: "onChange" });

  const { trigger, isMutating } = useSWRMutation(
    "/users/inventories-create",
    fetchCreateInventories
  );

  const { data: tags = [], isLoading: tagsLoading } = useSWR(
    tagSearchInput ? `/tags/autocompletion?q=${tagSearchInput}` : null,
    fetchTags,
    {
      keepPreviousData: true,
      revalidateOnFocus: false,
    }
  );

  const tagOptions = tags.map((tag) => ({
    value: tag, // —Å–æ—Ö—Ä–∞–Ω—è–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–ø–æ–π–¥–µ—Ç –≤ –ë–î)
    label: tag, // –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç (—É–≤–∏–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
  }));

  const onSubmit = async (formData) => {
    try {
      const tagValues = selectedTags.map((tag) => tag.value);

      const dataWithTags = {
        ...formData,
        tags: tagValues, // ‚Üê –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥–∏ –∫ –¥–∞–Ω–Ω—ã–º —Ñ–æ—Ä–º—ã
        isPublic: formData.isPublic === "true",
      };
      console.log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:", dataWithTags);
      const result = await trigger(dataWithTags);
      if (result.success) {
        toast.success("–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!");
        setSelectedTags([]);
        resetForm();

        const newInventoryId = result.data.id;
        navigate(`/inventory/${newInventoryId}`);
      } else {
        toast.error(result.message || "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è");
      }
    } catch (error) {
      toast.error(error.response?.data?.message || "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è");
      // setTimeout(() => navigate("/profile"), 2000);
    }
  };

  return (
    <div className="container mt-4">
      <h2>üß∞ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è</h2>
      <form onSubmit={handleSubmit(onSubmit)}>
        {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
        <div className="mb-3">
          <label className="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ</label>
          <input
            type="text"
            className="form-control"
            {...register("name", { required: "–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ" })}
          />
          {errors.name && (
            <div className="text-danger">{errors.name.message}</div>
          )}
        </div>

        {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
        <div className="mb-3">
          <label className="form-label">–û–ø–∏—Å–∞–Ω–∏–µ</label>
          <textarea
            className="form-control"
            placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Markdown)..."
            rows={4}
            {...register("description", {
              required: "–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é",
              minLength: { value: 10, message: "–ú–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤" },
              maxLength: { value: 1000, message: "–ú–∞–∫—Å–∏–º—É–º 1000 —Å–∏–º–≤–æ–ª–æ–≤" },
            })}
          />

          {errors.description && (
            <div className="text-danger">{errors.description.message}</div>
          )}
        </div>

        {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
        <div className="mb-3">
          <label className="form-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
          <select
            className={`form-select ${errors.category ? "is-invalid" : ""}`}
            {...register("category", { required: "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é" })}
          >
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
            <option value="–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ">–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</option>
            <option value="–ú–µ–±–µ–ª—å">–ú–µ–±–µ–ª—å</option>
            <option value="–ö–Ω–∏–≥–∏">–ö–Ω–∏–≥–∏</option>
            <option value="–î—Ä—É–≥–æ–µ">–î—Ä—É–≥–æ–µ</option>
          </select>
          {errors.category && (
            <div className="invalid-feedback">{errors.category.message}</div>
          )}
        </div>

        {/* –¢–µ–≥–∏ */}
        <div className="mb-3">
          <label className="form-label">–¢–µ–≥–∏</label>
          <CreatableSelect
            isMulti
            options={tagOptions}
            value={selectedTags}
            onChange={setSelectedTags}
            onInputChange={setTagSearchInput}
            placeholder={tagsLoading ? "–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–≥–æ–≤..." : "–ü–æ–∏—Å–∫ —Ç–µ–≥–æ–≤..."}
            formatCreateLabel={(inputValue) => `–°–æ–∑–¥–∞—Ç—å "${inputValue}"`}
            onCreateOption={(inputValue) => {
              setSelectedTags((prev) => [
                ...prev,
                { value: inputValue, label: inputValue },
              ]);
            }}
            isValidNewOption={(inputValue) =>
              inputValue.length > 0 &&
              !selectedTags.some((tag) => tag.value === inputValue)
            }
            noOptionsMessage={({ inputValue }) =>
              inputValue
                ? `"${inputValue}" –Ω–µ –Ω–∞–π–¥–µ–Ω`
                : "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞"
            }
          />
        </div>

        {/* –í–∏–¥–∏–º–æ—Å—Ç—å */}
        <div className="mb-3">
          <label className="form-label">–í–∏–¥–∏–º–æ—Å—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è</label>
          <div className="form-check">
            <input
              type="radio"
              value="true"
              {...register("isPublic")}
              defaultChecked
              className="form-check-input"
            />
            <label className="form-check-label">üü¢ –ü—É–±–ª–∏—á–Ω—ã–π</label>
          </div>
          <div className="form-check">
            <input
              type="radio"
              value="false"
              {...register("isPublic")}
              className="form-check-input"
            />
            <label className="form-check-label">üî¥ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π</label>
          </div>
        </div>

        {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
        <div className="mb-3">
          <label className="form-label">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</label>
          <input
            type="file"
            accept="image/*"
            className="form-control"
            onChange={(e) =>
              e.target.files[0] &&
              console.log("–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª:", e.target.files[0])
            }
          />
        </div>

        <button
          type="submit"
          className="btn btn-secondary"
          disabled={isMutating || !isValid}
        >
          {isMutating ? "–°–æ–∑–¥–∞–Ω–∏–µ..." : "–°–æ–∑–¥–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"}
        </button>
      </form>
    </div>
  );
};

export default CreateInventoryPage;

// error = {
//   response: {
//     status: 400,
//     data: {
//       success: false,
//       message: "–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"  // ‚Üê –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
//     }
//   }
// }
//const result = await trigger(formData) - —Ö—Ä–∞–Ω–∏—Ç—Å—è –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞

// {
//   name: "–ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è",        // –∏–∑ formData
//   description: "–û–ø–∏—Å–∞–Ω–∏–µ...",        // –∏–∑ formData
//   category: "–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ",          // –∏–∑ formData
//   isPublic: true,                    // –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –∏–∑ formData
//   tags: ["—Ç–µ—Ö–Ω–∏–∫–∞", "–æ—Ñ–∏—Å", "–≤–∞–∂–Ω–æ–µ"] // –∏–∑ selectedTags (–∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)
// }

// –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ API:
// javascript
// // tags = ["—Ç–µ—Ö–Ω–∏–∫–∞", "–æ—Ñ–∏—Å", "–≤–∞–∂–Ω–æ–µ"]
// // (–ø—Ä–æ—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫)
// –ü–æ—Å–ª–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:
// javascript
// tagOptions = [
//   { value: "—Ç–µ—Ö–Ω–∏–∫–∞", label: "—Ç–µ—Ö–Ω–∏–∫–∞" },
//   { value: "–æ—Ñ–∏—Å", label: "–æ—Ñ–∏—Å" },
//   { value: "–≤–∞–∂–Ω–æ–µ", label: "–≤–∞–∂–Ω–æ–µ" }
// ]
// (–º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏)
// üéØ –ü–æ—á–µ–º—É —ç—Ç–æ –Ω—É–∂–Ω–æ:
// React Select –æ–∂–∏–¥–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:

// javascript
// {
//   value: "—É–Ω–∏–∫–∞–ª—å–Ω—ã–π_–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä", // —á—Ç–æ —Ö—Ä–∞–Ω–∏—Ç—Å—è
//   label: "–æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π_—Ç–µ–∫—Å—Ç"        // —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
// }
