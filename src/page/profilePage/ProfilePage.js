import useSWR from "swr";
import { Link } from "react-router-dom";
import {
  fetchMyInventories,
  fetchAccessibleInventories,
} from "../../service/api";
import { Container, Card, Table, Button } from "react-bootstrap";
//import { toast } from "react-toastify";
import Error from "../../components/error/Error.js";
import Spinner from "../../components/spinner/Spinner.js";

const ProfilePage = () => {
  const {
    data: myData,
    isLoading: myLoading,
    error: myError,
  } = useSWR("/users/me/inventories", fetchMyInventories);

  const {
    data: accessibleData,
    isLoading: accessibleLoading,
    error: accessibleError,
  } = useSWR("/users/me/accessible-inventories", fetchAccessibleInventories);

  const myInventories = myData?.data || [];
  const accessibleInventories = accessibleData?.data || [];

  // –î–û–ë–ê–í–¨ –≠–¢–û –î–õ–Ø –û–¢–õ–ê–î–ö–ò:
  console.log("My inventories:", { myInventories, myLoading, myError });
  console.log("Accessible inventories:", {
    accessibleInventories,
    accessibleLoading,
    accessibleError,
  });

  if (myLoading || accessibleLoading) return <Spinner />;
  if (myError || accessibleError) return <Error />;

  return (
    <Container className="py-4">
      <h1 className="mb-4 fs-5">üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>

      <Card className="mb-5">
        <Card.Header>
          <h5 className="mb-0">üìÅ –ú–æ–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏</h5>
        </Card.Header>
        <Card.Body>
          {myInventories.length === 0 ? (
            <div className="text-center py-4">
              <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–π</p>
              <Button as={Link} to="/inventory/create" variant="primary">
                –°–æ–∑–¥–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
              </Button>
            </div>
          ) : (
            <Table responsive hover>
              <thead>
                <tr>
                  <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                  <th>–¢–æ–≤–∞—Ä–æ–≤</th>
                  <th>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</th>
                  <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                </tr>
              </thead>
              <tbody>
                {myInventories.map((inventory) => (
                  <tr key={inventory.id}>
                    <td>
                      <Link to={`/inventory/${inventory.id}`}>
                        {inventory.name}
                      </Link>
                    </td>
                    <td>
                      <span className="badge bg-primary">
                        {inventory._count?.items || 0}
                      </span>
                    </td>
                    <td>
                      {new Date(inventory.createdAt).toLocaleDateString(
                        "ru-RU"
                      )}
                    </td>
                    <td>
                      <Button
                        as={Link}
                        to={`/inventory/${inventory.id}`}
                        variant="outline-primary"
                        size="sm"
                      >
                        –û—Ç–∫—Ä—ã—Ç—å
                      </Button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </Table>
          )}
        </Card.Body>
      </Card>

      <Card>
        <Card.Header>
          <h5 className="mb-0">üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏</h5>
        </Card.Header>
        <Card.Body>
          {accessibleInventories.length === 0 ? (
            <div className="text-center py-4">
              <p>–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —á—É–∂–∏–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è–º</p>
            </div>
          ) : (
            <Table responsive hover>
              <thead>
                <tr>
                  <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                  <th>–í–ª–∞–¥–µ–ª–µ—Ü</th>
                  <th>–¢–æ–≤–∞—Ä–æ–≤</th>
                  <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                </tr>
              </thead>
              <tbody>
                {accessibleInventories.map((inventory) => (
                  <tr key={inventory.id}>
                    <td>
                      <Link to={`/inventory/${inventory.id}`}>
                        {inventory.name}
                      </Link>
                    </td>
                    <td>{inventory.user?.name}</td>
                    <td>
                      <span className="badge bg-primary">
                        {inventory._count?.items || 0}
                      </span>
                    </td>
                    <td>
                      <Button
                        as={Link}
                        to={`/inventory/${inventory.id}`}
                        variant="outline-primary"
                        size="sm"
                      >
                        –û—Ç–∫—Ä—ã—Ç—å
                      </Button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </Table>
          )}
        </Card.Body>
      </Card>
    </Container>
  );
};
export default ProfilePage;
