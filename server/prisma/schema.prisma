generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"        // Используем PostgreSQL
  url      = env("DATABASE_URL") // Берем URL из переменной окружения
}


model User {
  id        String   @id @default(cuid())    
  email     String   @unique                 
  name      String?   
  password  String                       
  createdAt DateTime @default(now())         
  updatedAt DateTime @updatedAt              

 
  inventories Inventory[] 
  inventoryAccesses InventoryAccess[]  

  @@map("users")  
}

model Inventory {
  id          String   @id @default(cuid())
  name        String                      
  description String?                     
  createdBy   String                      
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic    Boolean  @default(true)     


  userId String                         
  user   User   @relation(fields: [userId], references: [id]) // Связь с User                 
  tags Tag[]
  inventoryAccesses InventoryAccess[]
   items Item[]

  @@map("inventories")  
  
}


model Tag {
  id          String   @id @default(cuid())
  name        String                                          
  isPublic    Boolean  @default(true)     

 inventories Inventory[]
  @@map("tags")  
  
}


//для управления доступом
model InventoryAccess {
  id          String   @id @default(cuid())
  userId      String
  inventoryId String
  accessLevel String   @default("WRITE") // WRITE, READ, ADMIN
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Связи
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  inventory Inventory @relation(fields: [inventoryId], references: [id], onDelete: Cascade)

  @@unique([userId, inventoryId])
  @@map("inventory_accesses")
}



model Item {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  inventoryId String
  inventory   Inventory @relation(fields: [inventoryId], references: [id], onDelete: Cascade)

  @@map("items")
}